generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum ClanTag {
  pve
  pvp
  pvx
  crafting
  casual
  hardcore
  roleplay
  trading
}

enum ClanLocation {
  Europe_Africa @map("Europe/Africa")
  Americas
  Asia_Oceania @map("Asia/Oceania")
  Worldwide
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  clans         Clan[]
}

model Clan {
  id                Int          @id @default(autoincrement())
  name              String       @db.VarChar(100)
  imageUrl          String?      @map("image_url")
  description       String       @db.VarChar(200)
  tags              ClanTag[]
  location          ClanLocation
  language          String
  discordUrl        String       @map("discord_url")
  discordMembers    Int?         @map("discord_members")
  discordOnline     Int?         @map("discord_online")
  discordLastUpdate DateTime?    @map("discord_last_update")
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  lastBumpedAt      DateTime     @default(now()) @map("last_bumped_at")
  ownerId String?
  owner   User?   @relation(fields: [ownerId], references: [id])

  @@index([name])
  @@index([lastBumpedAt])
  @@map("clans")
}

